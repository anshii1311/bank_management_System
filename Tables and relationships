-- Branches (if multi‑branch banking supported)
CREATE TABLE Branch (
  branch_id      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  branch_name    VARCHAR2(100) NOT NULL,
  branch_address VARCHAR2(200),
  assets         NUMBER DEFAULT 0
);

-- Customers: user login, personal info, balance held in Accounts
CREATE TABLE Customer (
  customer_id    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  username       VARCHAR2(50) UNIQUE NOT NULL,
  password_hash  VARCHAR2(256) NOT NULL,
  full_name      VARCHAR2(100),
  mobile         VARCHAR2(15),
  email          VARCHAR2(100),
  dob            DATE
);

-- Accounts: one or many per customer (if joint, use a link table)
CREATE TABLE Account (
  account_id     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  account_type   VARCHAR2(20) NOT NULL,
  balance        NUMBER(15,2) DEFAULT 0 NOT NULL,
  branch_id      NUMBER,
  CONSTRAINT fk_account_branch
    FOREIGN KEY(branch_id) REFERENCES Branch(branch_id)
);

-- Link table for customer‑account many‑to‑many
CREATE TABLE CustomerAccount (
  customer_id    NUMBER NOT NULL,
  account_id     NUMBER NOT NULL,
  PRIMARY KEY (customer_id, account_id),
  CONSTRAINT fk_ca_customer FOREIGN KEY(customer_id) REFERENCES Customer(customer_id),
  CONSTRAINT fk_ca_account  FOREIGN KEY(account_id) REFERENCES Account(account_id)
);

-- Transactions: deposit, withdrawal, transfer, bill payment etc.
CREATE TABLE Transaction (
  transaction_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  transaction_type VARCHAR2(30) NOT NULL,
  amount         NUMBER(15,2) NOT NULL,
  trans_date     TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  from_account   NUMBER,
  to_account     NUMBER,
  performed_by   NUMBER, -- customer who initiated
  notes          VARCHAR2(200),
  CONSTRAINT fk_tx_from_account FOREIGN KEY(from_account) REFERENCES Account(account_id),
  CONSTRAINT fk_tx_to_account   FOREIGN KEY(to_account)   REFERENCES Account(account_id),
  CONSTRAINT fk_tx_customer     FOREIGN KEY(performed_by)   REFERENCES Customer(customer_id)
);

-- Optional: if loans are supported
CREATE TABLE Loan (
  loan_id        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  loan_type      VARCHAR2(50),
  issued_amount  NUMBER(15,2),
  remaining_amount NUMBER(15,2),
  branch_id      NUMBER,
  CONSTRAINT fk_loan_branch FOREIGN KEY(branch_id) REFERENCES Branch(branch_id)
);

-- Borrower link for joint loan holders:
CREATE TABLE Borrower (
  borrower_id    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  customer_id    NUMBER NOT NULL,
  loan_id        NUMBER NOT NULL,
  CONSTRAINT fk_borrower_customer FOREIGN KEY(customer_id) REFERENCES Customer(customer_id),
  CONSTRAINT fk_borrower_loan     FOREIGN KEY(loan_id) REFERENCES Loan(loan_id)
);

-- Payments toward loans
CREATE TABLE LoanPayment (
  payment_id     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  loan_id        NUMBER NOT NULL,
  amount         NUMBER(15,2) NOT NULL,
  pay_date       TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT fk_lp_loan FOREIGN KEY(loan_id) REFERENCES Loan(loan_id)
);

-- Optional: credit cards
CREATE TABLE CreditCard (
  credit_card_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  card_limit     NUMBER(15,2),
  expiry_date    DATE,
  customer_id    NUMBER NOT NULL,
  account_id     NUMBER,
  CONSTRAINT fk_cc_customer FOREIGN KEY(customer_id) REFERENCES Customer(customer_id),
  CONSTRAINT fk_cc_account  FOREIGN KEY(account_id) REFERENCES Account(account_id)
);
